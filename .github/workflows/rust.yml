name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: read
  checks: read

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    # ✅ Checkout repository
    - name: Checkout Code
      uses: actions/checkout@d9f1347dfa301b11b276e88779be4fd1d7110256 # v4

    # ✅ Install Rust Toolchain (Stable)
    - name: Install Rust
      uses: dtolnay/rust-toolchain@a53408b26da18e5a78b9d2d1b7b8b394e5d7b59a # stable
      with:
        components: clippy, rustfmt

    # ✅ Enable Cargo Caching
    - name: Cache Dependencies
      uses: Swatinem/rust-cache@6f5ef7f9e696163de6a32b8d51c8aefa7ec74f89 # v2
      with:
        cache-on-failure: true

    # ✅ Install System Dependencies
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev pkg-config

    # ✅ Check Formatting (But Don't Fail Build)
    - name: Check Formatting
      run: cargo fmt -- --check || echo "Formatting issues detected! Run 'cargo fmt' locally to fix."

    # ✅ Lint Code (Clippy) and Fix Issues Automatically
    - name: Lint with Clippy
      run: cargo clippy -- -D warnings || echo "Clippy warnings detected!"

    # ✅ Build the Rust project
    - name: Build
      run: cargo build --verbose

    # ✅ Run Tests (All Features)
    - name: Run Tests
      run: cargo test --all-features --verbose

    # ✅ Run Documentation Tests (Only If Docs Exist)
    - name: Run Doc Tests
      run: cargo test --doc || echo "No doc tests found."

    # ✅ Update Cargo.lock file
    - name: Update Cargo.lock
      run: cargo update
      
    # ✅ Commit and push the updated Cargo.lock file
    - name: Commit and Push
      uses: actions-js/push@c65cd883420fd2eb864698a825fc4162dd94482c # v1.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        message: 'Update Cargo.lock'
