name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  actions: read
  checks: read
  security-events: write # Added for security scanning

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings" # Treat warnings as errors

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.7.7
        with:
          cache-on-failure: true
          shared-key: "quantum-sdk"

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libasound2-dev \
            libudev-dev \
            pkg-config \
            alsa \
            libssl-dev

      - name: Security audit
        run: |
          cargo install --force --locked cargo-audit
          cargo audit --json > audit_results.json
        continue-on-error: true

      - name: Check for cargo audit results
        if: steps.security_audit.outcome != 'success'
        run: |
          echo "::warning::Cargo audit found vulnerabilities. Please review audit_results.json"
          cat audit_results.json

      - name: Check Formatting
        run: cargo fmt -- --check

      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features

      - name: Build
        run: cargo build --verbose --all-features

      - name: Run Tests
        run: cargo test --all-features --verbose
        env:
          RUST_BACKTRACE: 1

      - name: Run Doc Tests
        run: cargo test --doc

      - name: Check for Future Incompatibilities
        run: cargo report future-incompatibilities --id 1

      - name: Generate Documentation
        run: cargo doc --no-deps --all-features

      - name: Check for unused dependencies
        run: cargo udeps || true

      - name: Run cargo-deny checks
        uses: EmbarkStudios/cargo-deny-action@v1