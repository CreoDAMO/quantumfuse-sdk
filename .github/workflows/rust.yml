name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read   # âœ… Only allow read access to repo contents
  actions: read    # âœ… Allows reading workflows
  checks: read     # âœ… Allows reading check runs for statuses

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # âœ… Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # âœ… Install Rust Toolchain (Stable)
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt  # âœ… Adds Clippy & RustFmt

      # âœ… Enable Cargo Caching
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      # âœ… Install System Dependencies (for Audio, USB, etc.)
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev pkg-config

      # âœ… Check Formatting
      - name: Check Formatting
        run: cargo fmt -- --check

      # âœ… Lint Code (Clippy)
      - name: Lint with Clippy
        run: cargo clippy -- -D warnings  # ðŸš¨ Fails on warnings

      # âœ… Build the Rust project
      - name: Build
        run: cargo build --verbose

      # âœ… Run Tests (All Features)
      - name: Run Tests
        run: cargo test --all-features --verbose

      # âœ… Run Documentation Tests (if applicable)
      - name: Run Doc Tests
        run: cargo test --doc
